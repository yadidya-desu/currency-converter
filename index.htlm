<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>INR ↔ GBP Converter</title>
    <link rel="manifest" href="manifest.json">
    <meta name="theme-color" content="#2d89ef">
    <link rel="icon" sizes="192x192" href="icon-192.png">
    <link rel="icon" sizes="512x512" href="icon-512.png">
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #f8f9fa;
            text-align: center;
            padding: 20px;
        }
        h1 { color: #2d89ef; }
        .converter {
            background: #fff;
            padding: 20px;
            margin: auto;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            max-width: 350px;
        }
        input, select, button {
            padding: 10px;
            margin: 10px;
            font-size: 16px;
            width: calc(100% - 40px);
        }
        button {
            background: #2d89ef;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 8px;
        }
        button:hover {
            background: #1b5fbf;
        }
        #result {
            font-weight: bold;
            margin-top: 15px;
        }
    </style>
</head>
<body>
    <h1>INR ↔ GBP Converter</h1>
    <div class="converter">
        <input type="number" id="amount" placeholder="Enter amount">
        <select id="direction">
            <option value="INR-GBP">INR → GBP</option>
            <option value="GBP-INR">GBP → INR</option>
        </select>
        <button onclick="convertCurrency()">Convert</button>
        <div id="result"></div>
    </div>

    <script>
        async function convertCurrency() {
            const amount = parseFloat(document.getElementById('amount').value);
            const direction = document.getElementById('direction').value;
            const resultDiv = document.getElementById('result');

            if (isNaN(amount) || amount <= 0) {
                resultDiv.innerText = "Please enter a valid amount.";
                return;
            }

            try {
                const res = await fetch("https://api.exchangerate.host/latest?base=INR&symbols=GBP,INR");
                const data = await res.json();

                if (!data || !data.rates || !data.rates.GBP) {
                    throw new Error("Invalid API response");
                }

                let converted;
                if (direction === "INR-GBP") {
                    converted = amount * data.rates.GBP;
                    resultDiv.innerText = `${amount} INR = ${converted.toFixed(2)} GBP`;
                } else {
                    const rateINR = 1 / data.rates.GBP;
                    converted = amount * rateINR;
                    resultDiv.innerText = `${amount} GBP = ${converted.toFixed(2)} INR`;
                }
            } catch (error) {
                resultDiv.innerText = "Error fetching exchange rate.";
                console.error(error);
            }
        }

        // PWA: register service worker
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('service-worker.js');
        }
    </script>
</body>
</html>
